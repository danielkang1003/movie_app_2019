{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movie","title","summary","genres","year","rating","runtime","poster","url","h","Math","floor","m","className","src","alt","map","genre","index","key","slice","href","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","console","log","type","color","movie","id","medium_cover_image","torrents","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sUAgDeA,MA7Cf,YAAgF,IAA/DC,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,IAC/DC,EAAIC,KAAKC,MAAML,EAAU,IACzBM,EAAIN,EAAU,GAGlB,OAFAG,EAAIA,EAAI,GAAK,IAAMA,EAAIA,EACvBG,EAAIA,EAAI,GAAK,IAAMA,EAAIA,EAElB,yBAAKC,UAAU,SACV,yBAAKC,IAAKP,EAAQQ,IAAKd,EAAOA,MAAOA,IACrC,yBAAKY,UAAU,eACV,wBAAIA,UAAU,gBAAgBZ,GAC9B,wBAAIY,UAAU,eAAd,SAAmCT,GACnC,wBAAIS,UAAU,eAAd,SAAmCR,EAAnC,WACA,wBAAIQ,UAAU,eAAd,SACYJ,EADZ,QACoBG,EADpB,QAGA,wBAAIC,UAAU,SACRV,EAAOa,IAAI,SAACC,EAAOC,GAAR,OACP,wBAAIC,IAAKD,EAAOL,UAAU,iBACpBI,MAIhB,uBAAGJ,UAAU,kBAAkBX,EAAQkB,MAAM,EAAG,KAAhD,OACA,uBAAGP,UAAU,aAAaQ,KAAMb,GAAhC,YACeP,IAIpB,+B,iBC8CAqB,G,iNAtEVC,MAAQ,CACHC,WAAW,EACXC,OAAQ,I,EAGbC,U,qBAAY,8BAAAC,EAAA,qEAKGC,IAAMC,IACX,6CANE,gBAGWJ,EAHX,EAEFK,KACKA,KAAQL,OAOlB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAV5B,yC,mFAoBPQ,KAAKN,c,+BAGA,IAAD,EAC0BM,KAAKT,MAA3BC,EADJ,EACIA,UAAWC,EADf,EACeA,OAEnB,OADAQ,QAAQC,IAAIT,GAEP,6BAASZ,UAAU,aACbW,EACI,yBAAKX,UAAU,UACV,kBAAC,IAAD,CACKsB,KAAM,kBACNC,MAAO,SAOZ,0BAAMvB,UAAU,gBAAhB,eAGL,yBAAKA,UAAU,UACTY,EAAOT,IAAI,SAAAqB,GAAK,OACZ,kBAAC,EAAD,CACKlB,IAAKkB,EAAMC,GACXA,GAAID,EAAMC,GACVrC,MAAOoC,EAAMpC,MACbC,QAASmC,EAAMnC,QACfC,OAAQkC,EAAMlC,OACdC,KAAMiC,EAAMjC,KACZC,OAAQgC,EAAMhC,OACdC,QAAS+B,EAAM/B,QACfC,OAAQ8B,EAAME,mBACd/B,IAAK6B,EAAMG,SAAS,GAAGhC,c,GA5D7CiC,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cf443c25.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nfunction Movie({ title, summary, genres, year, rating, runtime, poster, url }) {\r\n     let h = Math.floor(runtime / 60);\r\n     let m = runtime % 60;\r\n     h = h < 10 ? \"0\" + h : h;\r\n     m = m < 10 ? \"0\" + m : m;\r\n     return (\r\n          <div className=\"movie\">\r\n               <img src={poster} alt={title} title={title} />\r\n               <div className=\"movie__data\">\r\n                    <h3 className=\"movie__title\">{title}</h3>\r\n                    <h5 className=\"movie__year\">year: {year}</h5>\r\n                    <h5 className=\"movie__rate\">rate: {rating} / 10.0</h5>\r\n                    <h5 className=\"movie__time\">\r\n                         time: {h}hour {m} min\r\n                    </h5>\r\n                    <ul className=\"genre\">\r\n                         {genres.map((genre, index) => (\r\n                              <li key={index} className=\"genres__genre\">\r\n                                   {genre}\r\n                              </li>\r\n                         ))}\r\n                    </ul>\r\n                    <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n                    <a className=\"movie__url\" href={url}>\r\n                         Download:{title}\r\n                    </a>\r\n               </div>\r\n\r\n               <br />\r\n          </div>\r\n     );\r\n}\r\n\r\nMovie.propTypes = {\r\n     id: PropTypes.number.isRequired,\r\n     title: PropTypes.string.isRequired,\r\n     summary: PropTypes.string.isRequired,\r\n     genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n     year: PropTypes.number.isRequired,\r\n     rating: PropTypes.number.isRequired,\r\n     runtime: PropTypes.number.isRequired,\r\n     poster: PropTypes.string.isRequired,\r\n     url: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movies\";\r\nimport ReactLoading from \"react-loading\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n     state = {\r\n          isLoading: true,\r\n          movies: []\r\n     };\r\n\r\n     getMovies = async () => {\r\n          const {\r\n               data: {\r\n                    data: { movies }\r\n               }\r\n          } = await axios.get(\r\n               \"https://yts-proxy.now.sh/list_movies.json\"\r\n               //if want to sort, add after movies.json: ?sort_by=rating\r\n          );\r\n          // console.log(movies);\r\n          this.setState({ movies, isLoading: false });\r\n     };\r\n\r\n     componentDidMount() {\r\n          // //method that called immediately after render is called\r\n          // setTimeout(() =>{\r\n          //   //delay function\r\n          //   this.setState({isLoading : false});\r\n          // }, 6000);\r\n          // const movies = axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\r\n          this.getMovies();\r\n     }\r\n\r\n     render() {\r\n          const { isLoading, movies } = this.state;\r\n          console.log(movies);\r\n          return (\r\n               <section className=\"container\">\r\n                    {isLoading ? (\r\n                         <div className=\"loader\">\r\n                              <ReactLoading\r\n                                   type={\"spinningBubbles\"}\r\n                                   color={\"#000\"}\r\n                              />\r\n                              {/* if would like to change type,\r\n                                   select one of them and put it in type\r\n                                   balls, bars, bubbles, cubes, cylon, spin,\r\n                                   spinningbubbles, spokes\r\n                              */}\r\n                              <span className=\"loader__text\">Loading...</span>\r\n                         </div>\r\n                    ) : (\r\n                         <div className=\"movies\">\r\n                              {movies.map(movie => (\r\n                                   <Movie\r\n                                        key={movie.id}\r\n                                        id={movie.id}\r\n                                        title={movie.title}\r\n                                        summary={movie.summary}\r\n                                        genres={movie.genres}\r\n                                        year={movie.year}\r\n                                        rating={movie.rating}\r\n                                        runtime={movie.runtime}\r\n                                        poster={movie.medium_cover_image}\r\n                                        url={movie.torrents[0].url}\r\n                                        //url={movie.url}\r\n                                   />\r\n                              ))}\r\n                         </div>\r\n                    )}\r\n               </section>\r\n          );\r\n     }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n//React application can only render one component at a time\r\n//Everything has to be inside of the application(App.js).\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}